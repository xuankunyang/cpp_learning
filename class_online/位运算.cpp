#include <iostream>
using namespace std;
int main()
{
	//两个数做与运算是不会变大的
	//两个数做或运算是不会变小的

	//异或运算是不会导致进位的，位宽不变
	//异或的性质： 交换律，结合率，自反x^x=0，x^0=x，逆运算：x^y=z->x=z^y
	//取反 通常用于无符号整数
	// 左右移尽量使用unsigned类型
	//按位左移k位 相当于乘上了2^k
	//右移同理 负数按位右移高位会补上1 
	//x&1判断奇数偶数
	//x>>i&1  求x二进制中的第i位
	//将x二进制中的某一位修改为1  x|(1<<i)
	//将x二进制中的某一位修改为0  x&(~(i<<i))
	//判断x是否为2的幂次方  x&（x-1）  如果x是2的幂次方 那么x二进制中只有一个1 而x-1中会有很多个连续的1 刚好相反
	//获取二进制中最低位的1 lowbit（x）= x & -x   如果x=010010 则lowbit（x）=000010









	return 0;
}