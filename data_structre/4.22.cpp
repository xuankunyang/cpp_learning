#include <iostream>
using namespace std;


int main()
{
	//
	// 静态查找
	// 
	// 顺序查找：O(n)
	// 
	// 折半查找：前提是有序，其实就是朴素的二分查找，细品还是倍增的思想
	// high和low变化的时候+1的同时-1，其实直接赋值也行
	// O(logn)
	// 
	// 插值查找：纯纯数值计算，数学方法，有序，均匀分布
	// 
	// 分块查找：块与块之间有一定的大小关系，由此可得到需要查找的块
	// 将最大值做成一个索引，先在索引中查找，再到对应的块中查找
	// 效率O(sqrt n)
	// 若每个块的大小为b 总数据量为n
	// 则时间复杂度：((n/b+1)/2)*(b+1)/2
	// 即当n=b^2时取得最小值
	// 
	// 
	// 动态查找（链式结构）
	// 
	// 二叉查找树
	// 对于每个节点而言，左子树上的所有值都小于等于他，右子树所有值都大于他
	// 注意是所有！
	// 
	// 
	// 
	// 
	// 
	//


	return 0;
}