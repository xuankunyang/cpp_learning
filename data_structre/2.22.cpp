#include <iostream>
using namespace std;

int main()
{
	// 五个元素排序 先将前四个排序 插入第五个元素 同理递归下去
	

	//时间复杂度 ： 有时间频度函数中的最高项决定 不带系数 主要关注循环
	//时间频度函数 T(n) 需要准确算出进行了多少次运算
	//内外循环相互关联时 建议手算一遍
	//和数据规模无关 ：O（1）
	// T1（n）是 O（f（n））T2 （n）是O（g（n））
	// 求和定理： 串行取max
	// 求积定理： 嵌套相乘
	// 时间复杂度通常考虑三方面：最好，最坏，平均
	// 时间复杂度三种表示： O：上限 Ω：下限  Θ：上下限相同 


	// 泛型机制：无论何种类型，在关系，基本处理方法上都是相似的
	// template <class T1，class T2 ,class T3 >相当于是一个假定 在调用函数的时候 有时候可以省略 即自动识别
	// template <class T>在定义类内函数的时候每个都必须要带上





	return 0;
}